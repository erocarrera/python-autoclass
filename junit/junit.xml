<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="4" name="pytest" skips="1" tests="51" time="1.423"><testcase classname="autoclass.tests.test_autoargs" file="autoclass/tests/test_autoargs.py" line="4" name="test_autoargs_simple" time="0.0014939308166503906"></testcase><testcase classname="autoclass.tests.test_autoargs" file="autoclass/tests/test_autoargs.py" line="21" name="test_autoargs_signature_preserving" time="0.0014178752899169922"></testcase><testcase classname="autoclass.tests.test_autoargs" file="autoclass/tests/test_autoargs.py" line="35" name="test_autoargs_varargs" time="0.001668691635131836"></testcase><testcase classname="autoclass.tests.test_autoargs" file="autoclass/tests/test_autoargs.py" line="57" name="test_autoargs_varargs_kwvarargs" time="0.0017392635345458984"></testcase><testcase classname="autoclass.tests.test_autoargs" file="autoclass/tests/test_autoargs.py" line="83" name="test_autoargs_noarg" time="0.0020046234130859375"></testcase><testcase classname="autoclass.tests.test_autoargs" file="autoclass/tests/test_autoargs.py" line="100" name="test_autoargs_include" time="0.0021402835845947266"></testcase><testcase classname="autoclass.tests.test_autoargs" file="autoclass/tests/test_autoargs.py" line="120" name="test_autoargs_exclude" time="0.0018165111541748047"></testcase><testcase classname="autoclass.tests.test_autoargs" file="autoclass/tests/test_autoargs.py" line="142" name="test_autoargs_include_exclude" time="0.0013446807861328125"></testcase><testcase classname="autoclass.tests.test_autoargs" file="autoclass/tests/test_autoargs.py" line="151" name="test_autoargs_include_exclude_typos" time="0.001230478286743164"></testcase><testcase classname="autoclass.tests.test_autoargs" file="autoclass/tests/test_autoargs.py" line="179" name="test_autoargs_no_double_set_default" time="0.0018265247344970703"></testcase><testcase classname="autoclass.tests.test_autoclass" file="autoclass/tests/test_autoclass.py" line="7" name="test_autoclass_enforce_validate_not_reversed" time="0.02351093292236328"><system-out>Set surface to 12
</system-out></testcase><testcase classname="autoclass.tests.test_autoclass" file="autoclass/tests/test_autoclass.py" line="30" name="test_autoclass_enforce_validate_reversed" time="0.0033326148986816406"></testcase><testcase classname="autoclass.tests.test_autoclass" file="autoclass/tests/test_autoclass.py" line="54" name="test_readme_pytypes" time="0.03876829147338867"></testcase><testcase classname="autoclass.tests.test_autoclass" file="autoclass/tests/test_autoclass.py" line="93" name="test_readme_enforce" time="0.00783681869506836"></testcase><testcase classname="autoclass.tests.test_autodict" file="autoclass/tests/test_autodict.py" line="6" name="test_autodict[only_constructor_args-only_public]" time="0.004450559616088867"></testcase><testcase classname="autoclass.tests.test_autodict" file="autoclass/tests/test_autodict.py" line="6" name="test_autodict[only_constructor_args-including class-private dunder fields]" time="0.0038025379180908203"></testcase><testcase classname="autoclass.tests.test_autodict" file="autoclass/tests/test_autodict.py" line="6" name="test_autodict[all_obj_fields-only_public]" time="0.003347635269165039"></testcase><testcase classname="autoclass.tests.test_autodict" file="autoclass/tests/test_autodict.py" line="6" name="test_autodict[all_obj_fields-including class-private dunder fields]" time="0.004436492919921875"></testcase><testcase classname="autoclass.tests.test_autohash" file="autoclass/tests/test_autohash.py" line="7" name="test_autohash[only_constructor_args-only_public]" time="0.0023806095123291016"></testcase><testcase classname="autoclass.tests.test_autohash" file="autoclass/tests/test_autohash.py" line="7" name="test_autohash[only_constructor_args-including class-private dunder fields]" time="0.0030896663665771484"></testcase><testcase classname="autoclass.tests.test_autohash" file="autoclass/tests/test_autohash.py" line="7" name="test_autohash[all_obj_fields-only_public]" time="0.0025115013122558594"></testcase><testcase classname="autoclass.tests.test_autohash" file="autoclass/tests/test_autohash.py" line="7" name="test_autohash[all_obj_fields-including class-private dunder fields]" time="0.002414703369140625"></testcase><testcase classname="autoclass.tests.test_autoprops" file="autoclass/tests/test_autoprops.py" line="8" name="test_autoprops_no_contract" time="0.0028314590454101562"></testcase><testcase classname="autoclass.tests.test_autoprops" file="autoclass/tests/test_autoprops.py" line="27" name="test_autoprops_pycontracts" time="0.2701852321624756"></testcase><testcase classname="autoclass.tests.test_autoprops" file="autoclass/tests/test_autoprops.py" line="55" name="test_autoprops_include" time="0.0032377243041992188"></testcase><testcase classname="autoclass.tests.test_autoprops" file="autoclass/tests/test_autoprops.py" line="78" name="test_autoprops_exclude" time="0.0046885013580322266"></testcase><testcase classname="autoclass.tests.test_autoprops" file="autoclass/tests/test_autoprops.py" line="101" name="test_autoprops_include_exclude" time="0.0011026859283447266"></testcase><testcase classname="autoclass.tests.test_autoprops" file="autoclass/tests/test_autoprops.py" line="111" name="test_autoprops_override" time="0.01246786117553711"><system-out>Property &apos;b&apos; was set to &apos;[&apos;pie&apos;, &apos;pie2&apos;]&apos;
a is being read. Its value is &apos;rhubarb&apos;
Property &apos;b&apos; was set to &apos;[&apos;eh&apos;, &apos;oh&apos;]&apos;
</system-out></testcase><testcase classname="autoclass.tests.test_autoprops" file="autoclass/tests/test_autoprops.py" line="156" name="test_autoprops_override_exceptions" time="0.005053043365478516"></testcase><testcase classname="autoclass.tests.test_autoprops" file="autoclass/tests/test_autoprops.py" line="201" name="test_autoprops_manual" time="0.0051422119140625"></testcase><testcase classname="autoclass.tests.test_autoprops" file="autoclass/tests/test_autoprops.py" line="230" name="test_autoprops_signature_preserving" time="0.0027282238006591797"></testcase><testcase classname="autoclass.tests.test_autoprops" file="autoclass/tests/test_autoprops.py" line="252" name="test_autoprops_enforce_validate" time="0.010383844375610352"><system-out>Set surface to 12
Set surface to 0.1
</system-out></testcase><testcase classname="autoclass.tests.test_autoprops" file="autoclass/tests/test_autoprops.py" line="303" name="test_autoprops_enforce_default" time="0.005800008773803711"></testcase><testcase classname="autoclass.tests.test_readme_index" file="autoclass/tests/test_readme_index.py" line="5" name="test_readme_index_basic" time="0.00548553466796875"><failure message="assert &quot;House({&apos;nb_f... &apos;my_house&apos;})&quot; == &quot;House({&apos;name&apos;..._floors&apos;: 3})&quot;
  - House({&apos;nb_floors&apos;: 3, &apos;name&apos;: &apos;my_house&apos;})
  + House({&apos;name&apos;: &apos;my_house&apos;, &apos;nb_floors&apos;: 3})">def test_readme_index_basic():
        &quot;&quot;&quot; First basic example in the doc &quot;&quot;&quot;
    
        from autoclass import autoclass
    
        @autoclass
        class House:
            def __init__(self, name, nb_floors=1):
                pass
    
        a = House(&apos;my_house&apos;, 3)
&gt;       assert str(a) == &quot;House({&apos;name&apos;: &apos;my_house&apos;, &apos;nb_floors&apos;: 3})&quot;
E       assert &quot;House({&apos;nb_f... &apos;my_house&apos;})&quot; == &quot;House({&apos;name&apos;..._floors&apos;: 3})&quot;
E         - House({&apos;nb_floors&apos;: 3, &apos;name&apos;: &apos;my_house&apos;})
E         + House({&apos;name&apos;: &apos;my_house&apos;, &apos;nb_floors&apos;: 3})

autoclass/tests/test_readme_index.py:17: AssertionError</failure></testcase><testcase classname="autoclass.tests.test_readme_index" file="autoclass/tests/test_readme_index.py" line="22" name="test_readme_index_basic2" time="0.00448918342590332"></testcase><testcase classname="autoclass.tests.test_readme_index" file="autoclass/tests/test_readme_index.py" line="50" name="test_readme_enforce_simple" time="0.0077953338623046875"></testcase><testcase classname="autoclass.tests.test_readme_index" file="autoclass/tests/test_readme_index.py" line="75" name="test_readme_index_pytypes_simple" time="0.015825986862182617"></testcase><testcase classname="autoclass.tests.test_readme_index" file="autoclass/tests/test_readme_index.py" line="98" name="test_readme_index_valid8_simple" time="0.002981424331665039"><failure message="ImportError: No module named &apos;mini_lambda&apos;">def test_readme_index_valid8_simple():
        &quot;&quot;&quot; Example in the doc with valid8 &quot;&quot;&quot;
    
        from autoclass import autoclass
&gt;       from mini_lambda import s, x, l, Len
E       ImportError: No module named &apos;mini_lambda&apos;

autoclass/tests/test_readme_index.py:103: ImportError</failure></testcase><testcase classname="autoclass.tests.test_readme_index" file="autoclass/tests/test_readme_index.py" line="131" name="test_readme_index_enforce_valid8" time="0.0031783580780029297"><failure message="ImportError: No module named &apos;mini_lambda&apos;">def test_readme_index_enforce_valid8():
        &quot;&quot;&quot; Makes sure that the code in the documentation page is correct for the enforce + valid8 example &quot;&quot;&quot;
    
        from autoclass import autoclass
    
        # Imports - for type validation
        from numbers import Integral
        from enforce import runtime_validation, config
        config(dict(mode=&apos;covariant&apos;))  # type validation will accept subclasses too
    
        # Imports - for value validation
&gt;       from mini_lambda import s, x, Len
E       ImportError: No module named &apos;mini_lambda&apos;

autoclass/tests/test_readme_index.py:143: ImportError</failure></testcase><testcase classname="autoclass.tests.test_readme_index" file="autoclass/tests/test_readme_index.py" line="171" name="test_readme_pycontracts_simple" time="0.02616286277770996"></testcase><testcase classname="autoclass.tests.test_readme_index" file="autoclass/tests/test_readme_index.py" line="194" name="test_readme_old_way" time="0.0013458728790283203"></testcase><testcase classname="autoclass.tests.test_readme_index" file="autoclass/tests/test_readme_index.py" line="256" name="test_readme_pycontracts_complex" time="0.03350186347961426"></testcase><testcase classname="autoclass.tests.test_readme_index" file="autoclass/tests/test_readme_index.py" line="291" name="test_readme_pytypes_validate_complex" time="0.0014820098876953125"><skipped message="open bug in pytypes https://github.com/Stewori/pytypes/issues/19" type="pytest.skip">autoclass/tests/test_readme_index.py:291: &lt;py._xmlgen.raw object at 0x7f478d6856a0&gt;</skipped></testcase><testcase classname="autoclass.tests.test_readme_usage" file="autoclass/tests/test_readme_usage.py" line="6" name="test_readme_usage_autoprops_validate" time="0.002821683883666992"></testcase><testcase classname="autoclass.tests.test_readme_usage" file="autoclass/tests/test_readme_usage.py" line="25" name="test_readme_usage_autodict_1" time="0.0032138824462890625"></testcase><testcase classname="autoclass.tests.test_readme_usage" file="autoclass/tests/test_readme_usage.py" line="64" name="test_readme_usage_autodict_2" time="0.0021982192993164062"></testcase><testcase classname="autoclass.tests.test_readme_usage" file="autoclass/tests/test_readme_usage.py" line="80" name="test_readme_usage_autodict_3" time="0.002218961715698242"></testcase><testcase classname="autoclass.tests.test_readme_usage" file="autoclass/tests/test_readme_usage.py" line="99" name="test_readme_usage_autohash_1" time="0.0020117759704589844"><failure message="AssertionError: assert -7875256062203321550 == -872266043135923876
 +  where -7875256062203321550 = hash(&lt;autoclass.tests.test_readme_usage.test_readme_usage_autohash_1.&lt;locals&gt;.A object at 0x7f478d62b898&gt;)
 +  and   -872266043135923876 = hash((1, &apos;r&apos;, 2))">def test_readme_usage_autohash_1():
        @autohash
        class A(object):
            def __init__(self, a: int, b: str):
                self.a = a
                self.b = b
    
        o = A(1, &apos;r&apos;)
        o._test = 2
    
        # o is hashable
&gt;       assert hash(o) == hash((1, &apos;r&apos;, 2))
E       AssertionError: assert -7875256062203321550 == -872266043135923876
E        +  where -7875256062203321550 = hash(&lt;autoclass.tests.test_readme_usage.test_readme_usage_autohash_1.&lt;locals&gt;.A object at 0x7f478d62b898&gt;)
E        +  and   -872266043135923876 = hash((1, &apos;r&apos;, 2))

autoclass/tests/test_readme_usage.py:111: AssertionError</failure></testcase><testcase classname="autoclass.tests.test_readme_usage" file="autoclass/tests/test_readme_usage.py" line="122" name="test_readme_usage_autohash_2" time="0.002044677734375"></testcase><testcase classname="autoclass.tests.test_readme_usage" file="autoclass/tests/test_readme_usage.py" line="142" name="test_readme_usage_autoclass" time="0.014599800109863281"></testcase><testcase classname="autoclass.tests.test_readme_usage" file="autoclass/tests/test_readme_usage.py" line="177" name="test_readme_usage_autoclass_custom" time="0.007305622100830078"></testcase></testsuite>